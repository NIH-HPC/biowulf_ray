#!/bin/bash
#SBATCH --cpus-per-task=12
#SBATCH --mem-per-cpu=2GB
#SBATCH --nodes=2
# based on my testing, there can only be one task per node.
# They don't have to be exclusive but it would make sense
# if they were.
#SBATCH --tasks-per-node=1
####SBATCH --gpus-per-task=1
#SBATCH --time=00:30:00
#SBATCH --gres=lscratch:200
#SBATCH --partition=quick

module load python/3.8
export TMPDIR="/lscratch/${SLURM_JOB_ID}"

redis_password="$(tr -dc 'a-zA-Z0-9_' < /dev/urandom | head -c 16)"
mapfile -t nodes < <(scontrol show hostnames "$SLURM_JOB_NODELIST")

head_node="${nodes[0]}"
head_node_ip="$(srun --nodes=1 --ntasks=1 -w "$head_node" hostname --ip-address)"

port="$(/usr/local/bin/portauthority)"
ip_head="$head_node_ip:$port"
echo "IP Head: $ip_head"

# make sure to use --cpus-per-task
ncpus="${SLURM_CPUS_PER_TASK:-2}"
# if not using --gpus-per-task for GPU (i.e. using --gres), 
# SLURM_GPUS_PER_TASK is not set
ngpus=0
if [[ "${SLURM_GPUS_PER_TASK:-none}" != "none" ]] ; then
    ngpus="${SLURM_GPUS_PER_TASK}"
elif [[ "${SLURM_STEP_GPUS:-none}" != "none" ]] ; then
    ngpus="${SLURM_STEP_GPUS}"
fi

echo "Starting ray HEAD at $head_node"
srun --nodes=1 --ntasks=1 -w "$head_node" \
    ray start --head --node-ip-address="$head_node_ip" \
    --port="$port" --redis-password="$redis_password" --include-dashboard false \
    --num-cpus "${ncpus}" --num-gpus "${ngpus}" --block &

sleep 10

nworkers="${#nodes[@]}"

# --memory is a hidden option - see https://github.com/ray-project/ray/blob/320f9dc234b92d3b49064da5201935542d2cfb26/python/ray/scripts/scripts.py#L324
echo "Starting WORKERS"
# this only works for one task per node
mem=$(( SLURM_CPUS_PER_TASK * SLURM_MEM_PER_CPU * 1024 * 1024 ))
srun --ntasks=$((nworkers - 1)) \
    ray start --address "$ip_head" --redis-password="$redis_password" \
    --num-cpus "${ncpus}" --num-gpus "${ngpus}" --memory $mem --block &

sleep 10

echo "starting work"
# ray/doc/source/cluster/examples/simple-trainer.py
#python -u simple-trainer.py $((ncpus * SLURM_NTASKS)) "$ip_head" "$redis_password"
export ip_head redis_password
python -u mnist_pytorch_trainable.py 
